<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>answerA</key>
		<string>代替＃define</string>
		<key>answerB</key>
		<string>使某个对象（变量）、值，指针，引用不能被修改。修饰函数参数，对于类的成员可以确定不能修改的类的数据成员</string>
		<key>answerC</key>
		<string>使类的静态对象在类内部可以初始化</string>
		<key>answerD</key>
		<string>修饰函数参数和返回值,对于类的成员函数可以确定不能修改类的数据成员</string>
		<key>rigthAnswer</key>
		<string>D</string>
		<key>question</key>
		<string>const在c++中的作用</string>
		<key>number</key>
		<integer>1</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>保持变量内容的持久</string>
		<key>answerB</key>
		<string>默认初始化为0</string>
		<key>answerC</key>
		<string>隐藏</string>
		<key>answerD</key>
		<string>以上全部</string>
		<key>rigthAnswer</key>
		<string>D</string>
		<key>question</key>
		<string>static在c++中的作用</string>
		<key>number</key>
		<integer>2</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>构造函数</string>
		<key>answerB</key>
		<string>析构函数</string>
		<key>answerC</key>
		<string>纯虚函数</string>
		<key>answerD</key>
		<string>拷贝构造函数</string>
		<key>rigthAnswer</key>
		<string>C</string>
		<key>question</key>
		<string>一个抽象类的派生类可以实例化的必要条件是</string>
		<key>number</key>
		<integer>3</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>析构函数</string>
		<key>answerB</key>
		<string>构造函数</string>
		<key>answerC</key>
		<string>类成员函数</string>
		<key>answerD</key>
		<string>以上都不对</string>
		<key>rigthAnswer</key>
		<string>B</string>
		<key>question</key>
		<string>不能说明虚函数的</string>
		<key>number</key>
		<integer>4</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>是</string>
		<key>answerB</key>
		<string>否</string>
		<key>answerC</key>
		<string></string>
		<key>answerD</key>
		<string></string>
		<key>rigthAnswer</key>
		<string>A</string>
		<key>question</key>
		<string>内联函数都带inline关键字吗</string>
		<key>number</key>
		<integer>5</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>封装</string>
		<key>answerB</key>
		<string>分类</string>
		<key>answerC</key>
		<string>继承、多态</string>
		<key>answerD</key>
		<string>协议</string>
		<key>rigthAnswer</key>
		<string>C</string>
		<key>question</key>
		<string>c++中用来扩充和完善已有类以适应新需求用什么？</string>
		<key>number</key>
		<integer>6</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>同一作用域</string>
		<key>answerB</key>
		<string>不同形参表，形参个数，形参类型</string>
		<key>answerC</key>
		<string>同一作用于，相同返回值</string>
		<key>answerD</key>
		<string>同一作用域，不同形参表，形参个数，形参类型</string>
		<key>rigthAnswer</key>
		<string>A</string>
		<key>question</key>
		<string>函数重载的重要依据</string>
		<key>number</key>
		<integer>7</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>c语言中带参宏，c++用内联</string>
		<key>answerB</key>
		<string>c语言用内联，c++带参宏</string>
		<key>answerC</key>
		<string></string>
		<key>answerD</key>
		<string></string>
		<key>rigthAnswer</key>
		<string>A</string>
		<key>question</key>
		<string>对于一个频繁使用的短小函数，c语言里面用什么实现？c++里面呢？</string>
		<key>number</key>
		<integer>8</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>非空区别：不能使用指向空值的引用</string>
		<key>answerB</key>
		<string>合法性区别：指针总被测试，防止为空</string>
		<key>answerC</key>
		<string>可修改区别：指针可以被重新赋值</string>
		<key>answerD</key>
		<string>以上全部</string>
		<key>rigthAnswer</key>
		<string>D</string>
		<key>question</key>
		<string>引用和指针的区别</string>
		<key>number</key>
		<integer>9</integer>
	</dict>
	<dict>
		<key>answerA</key>
		<string>纯虚函数是给出实现版本的函数</string>
		<key>answerB</key>
		<string>纯虚函数的声明总是以“=0”结束</string>
		<key>answerC</key>
		<string>派生类必须实现基类的纯虚函数</string>
		<key>answerD</key>
		<string>含有纯虚函数的类一定是派生类</string>
		<key>rigthAnswer</key>
		<string>B</string>
		<key>question</key>
		<string>关于纯虚函数，下列表述正确的是</string>
		<key>number</key>
		<integer>10</integer>
	</dict>
</array>
</plist>
